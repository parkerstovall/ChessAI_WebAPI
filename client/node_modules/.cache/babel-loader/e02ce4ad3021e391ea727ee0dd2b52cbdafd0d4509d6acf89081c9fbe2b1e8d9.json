{"ast":null,"code":"var _jsxFileName = \"/Users/parkerstovall/Desktop/WorkStuff/ChessAI_WebAPI/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { BoardSquareArgs } from './js/BoardSquareArgs';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [boardArgs, setBoardArgs] = useState();\n  const [whiteDisplay, setWhiteDisplay] = useState(false);\n  const [blackDisplay, setBlackDisplay] = useState(false);\n  const board = [];\n  const whitePieces = document.getElementById(\"WhiteDisplay\");\n  const blackPieces = document.getElementById(\"BlackDisplay\");\n  if (whitePieces !== null && whitePieces.children.length === 0) {\n    setWhiteDisplay(false);\n  }\n  if (blackPieces !== null && blackPieces.children.length === 0) {\n    setBlackDisplay(false);\n  }\n  const pieceOrder = [\"Rook\", \"Knight\", \"Bishop\", \"Queen\", \"King\", \"Bishop\", \"Knight\", \"Rook\"];\n  let whiteSquare = true;\n  let whitePiece = false;\n  for (let i = 0; i < 8; i++) {\n    board.push(new Array());\n    for (var j = 0; j < 8; j++) {\n      board[i][j] = new BoardSquareArgs();\n      if (i == 0 || i == 7) {\n        board[i][j].piece = (whitePiece ? \"white|\" : \"black|\") + pieceOrder[j];\n      } else if (i == 1 || i == 6) {\n        board[i][j].piece = whitePiece ? \"white|Pawn\" : \"black|Pawn\";\n      }\n      board[i][j].col = i;\n      board[i][j].row = j;\n      board[i][j].backColor = whiteSquare ? \"white\" : \"black\";\n      board[i][j].pieceClass = board[i][j].backColor + \" boardBtn\";\n      if (board[i][j].piece && board[i][j].piece != \"\") {\n        board[i][j].pieceClass += \" \" + board[i][j].piece.split('|').join('');\n      }\n      whiteSquare = !whiteSquare;\n    }\n    if (i == 1) {\n      whitePiece = !whitePiece;\n    }\n    whiteSquare = !whiteSquare;\n  }\n  ;\n  setBoardArgs(board);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pieceDisplay\",\n      id: \"WhiteDisplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"GameBoard\",\n      className: \"GameBoard\",\n      children: boardArgs === null || boardArgs === void 0 ? void 0 : boardArgs.map((row, i) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: row[0].pieceClass,\n            id: \"board\" + row[0].col + row[0].row\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: row[1].pieceClass,\n            id: \"board\" + row[1].col + row[1].row\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: row[2].pieceClass,\n            id: \"board\" + row[2].col + row[2].row\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: row[3].pieceClass,\n            id: \"board\" + row[3].col + row[3].row\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: row[4].pieceClass,\n            id: \"board\" + row[4].col + row[4].row\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: row[5].pieceClass,\n            id: \"board\" + row[5].col + row[5].row\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: row[6].pieceClass,\n            id: \"board\" + row[6].col + row[6].row\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: row[7].pieceClass,\n            id: \"board\" + row[7].col + row[7].row\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pieceDisplay\",\n      id: \"BlackDisplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"HJ+DKXA3qsw6JTAkfyDU+RrMMws=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BoardSquareArgs","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","boardArgs","setBoardArgs","whiteDisplay","setWhiteDisplay","blackDisplay","setBlackDisplay","board","whitePieces","document","getElementById","blackPieces","children","length","pieceOrder","whiteSquare","whitePiece","i","push","Array","j","piece","col","row","backColor","pieceClass","split","join","className","id","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/parkerstovall/Desktop/WorkStuff/ChessAI_WebAPI/client/src/App.tsx"],"sourcesContent":["import { BoardSquareArgs } from './js/BoardSquareArgs';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [boardArgs, setBoardArgs] = useState<BoardSquareArgs[][]>();\n  const [whiteDisplay, setWhiteDisplay] = useState<boolean>(false);\n  const [blackDisplay, setBlackDisplay] = useState<boolean>(false);\n  const board: BoardSquareArgs[][] = [];\n\n  const whitePieces = document.getElementById(\"WhiteDisplay\")\n  const blackPieces = document.getElementById(\"BlackDisplay\");\n\n  if (whitePieces !== null && whitePieces.children.length === 0) {\n      setWhiteDisplay(false);\n  }\n\n  if (blackPieces !== null && blackPieces.children.length === 0) {\n      setBlackDisplay(false);\n  }\n\n  const pieceOrder = [ \"Rook\", \"Knight\", \"Bishop\", \"Queen\", \"King\", \"Bishop\", \"Knight\", \"Rook\" ];\n  let whiteSquare = true;\n  let whitePiece = false;\n\n  for (let i = 0; i < 8; i++) {\n    board.push(new Array<BoardSquareArgs>());\n\n    for (var j = 0; j < 8; j++) {\n        board[i][j] = new BoardSquareArgs();\n\n        if (i == 0 || i == 7) {\n            board[i][j].piece = (whitePiece ? \"white|\" : \"black|\") + pieceOrder[j];\n        }\n        else if (i == 1 || i == 6) {\n            board[i][j].piece = whitePiece ? \"white|Pawn\" : \"black|Pawn\";\n        }\n\n        board[i][j].col = i;\n        board[i][j].row = j;\n        board[i][j].backColor = (whiteSquare ? \"white\" : \"black\");\n\n        board[i][j].pieceClass = board[i][j].backColor + \" boardBtn\";\n\n        if (board[i][j].piece && board[i][j].piece != \"\") \n        {\n            board[i][j].pieceClass += \" \" + board[i][j].piece.split('|').join('');\n        }\n\n        whiteSquare = !whiteSquare;\n    }\n\n    if (i == 1) {\n        whitePiece = !whitePiece;\n    }\n\n    whiteSquare = !whiteSquare; \n  };\n\n  setBoardArgs(board);\n\n  return (\n    <>\n      <div className=\"pieceDisplay\" id=\"WhiteDisplay\"></div>\n      <div id=\"GameBoard\" className=\"GameBoard\">\n        {boardArgs?.map((row, i) => {\n          return (\n            <>\n              <div className={row[0].pieceClass} id={\"board\" + row[0].col + row[0].row}></div>\n              <div className={row[1].pieceClass} id={\"board\" + row[1].col + row[1].row}></div>\n              <div className={row[2].pieceClass} id={\"board\" + row[2].col + row[2].row}></div>\n              <div className={row[3].pieceClass} id={\"board\" + row[3].col + row[3].row}></div>\n              <div className={row[4].pieceClass} id={\"board\" + row[4].col + row[4].row}></div>\n              <div className={row[5].pieceClass} id={\"board\" + row[5].col + row[5].row}></div>\n              <div className={row[6].pieceClass} id={\"board\" + row[6].col + row[6].row}></div>\n              <div className={row[7].pieceClass} id={\"board\" + row[7].col + row[7].row}></div>\n            </>\n          )\n        })}\n      </div>\n      <div className=\"pieceDisplay\" id=\"BlackDisplay\"></div>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}