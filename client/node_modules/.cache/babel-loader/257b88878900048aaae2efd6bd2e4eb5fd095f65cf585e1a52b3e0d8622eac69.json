{"ast":null,"code":"var _jsxFileName = \"/Users/parkerstovall/Desktop/WorkStuff/ChessAI_WebAPI/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { BoardSquareArgs } from './js/BoardSquareArgs';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [boardArgs, setBoardArgs] = useState();\n  const [whiteDisplay, setWhiteDisplay] = useState(false);\n  const [blackDisplay, setBlackDisplay] = useState(false);\n  const board = [];\n  function LoadInitialBoard() {\n    const pieceOrder = [\"Rook\", \"Knight\", \"Bishop\", \"Queen\", \"King\", \"Bishop\", \"Knight\", \"Rook\"];\n    let whiteSquare = true;\n    let whitePiece = false;\n    for (let i = 0; i < 8; i++) {\n      board.push(new Array());\n      for (var j = 0; j < 8; j++) {\n        board[i][j] = new BoardSquareArgs();\n        if (i == 0 || i == 7) {\n          board[i][j].piece = (whitePiece ? \"white|\" : \"black|\") + pieceOrder[j];\n        } else if (i == 1 || i == 6) {\n          board[i][j].piece = whitePiece ? \"white|Pawn\" : \"black|Pawn\";\n        }\n        board[i][j].col = i;\n        board[i][j].row = j;\n        board[i][j].backColor = whiteSquare ? \"white\" : \"black\";\n        board[i][j].pieceClass = board[i][j].backColor + \" boardBtn\";\n        if (board[i][j].piece && board[i][j].piece != \"\") {\n          board[i][j].pieceClass += \" \" + board[i][j].piece.split('|').join('');\n        }\n        whiteSquare = !whiteSquare;\n      }\n      if (i == 1) {\n        whitePiece = !whitePiece;\n      }\n      whiteSquare = !whiteSquare;\n    }\n    ;\n    setBoardArgs(board);\n  }\n  useEffect(() => {\n    LoadInitialBoard();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pieceDisplay\",\n      style: {\n        display: whiteDisplay ? \"block\" : \"none\"\n      },\n      id: \"WhiteDisplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"GameBoard\",\n      className: \"GameBoard\",\n      children: boardArgs === null || boardArgs === void 0 ? void 0 : boardArgs.map(row => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: row === null || row === void 0 ? void 0 : row.map(square => {\n            /*#__PURE__*/_jsxDEV(\"div\", {\n              className: square.pieceClass,\n              id: \"board\" + square.col + square.row\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pieceDisplay\",\n      style: {\n        display: blackDisplay ? \"block\" : \"none\"\n      },\n      id: \"BlackDisplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"DyQQvU98+qgCyaSBqC0MBvsgZwc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BoardSquareArgs","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","boardArgs","setBoardArgs","whiteDisplay","setWhiteDisplay","blackDisplay","setBlackDisplay","board","LoadInitialBoard","pieceOrder","whiteSquare","whitePiece","i","push","Array","j","piece","col","row","backColor","pieceClass","split","join","children","className","style","display","id","fileName","_jsxFileName","lineNumber","columnNumber","map","square","_c","$RefreshReg$"],"sources":["/Users/parkerstovall/Desktop/WorkStuff/ChessAI_WebAPI/client/src/App.tsx"],"sourcesContent":["import { BoardSquareArgs } from './js/BoardSquareArgs';\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [boardArgs, setBoardArgs] = useState<BoardSquareArgs[][]>();\n  const [whiteDisplay, setWhiteDisplay] = useState<boolean>(false);\n  const [blackDisplay, setBlackDisplay] = useState<boolean>(false);\n  const board: BoardSquareArgs[][] = [];\n\n  function LoadInitialBoard() {\n    const pieceOrder = [ \"Rook\", \"Knight\", \"Bishop\", \"Queen\", \"King\", \"Bishop\", \"Knight\", \"Rook\" ];\n    let whiteSquare = true;\n    let whitePiece = false;\n\n    for (let i = 0; i < 8; i++) {\n      board.push(new Array<BoardSquareArgs>());\n\n      for (var j = 0; j < 8; j++) {\n          board[i][j] = new BoardSquareArgs();\n\n          if (i == 0 || i == 7) {\n              board[i][j].piece = (whitePiece ? \"white|\" : \"black|\") + pieceOrder[j];\n          }\n          else if (i == 1 || i == 6) {\n              board[i][j].piece = whitePiece ? \"white|Pawn\" : \"black|Pawn\";\n          }\n\n          board[i][j].col = i;\n          board[i][j].row = j;\n          board[i][j].backColor = (whiteSquare ? \"white\" : \"black\");\n\n          board[i][j].pieceClass = board[i][j].backColor + \" boardBtn\";\n\n          if (board[i][j].piece && board[i][j].piece != \"\") \n          {\n              board[i][j].pieceClass += \" \" + board[i][j].piece.split('|').join('');\n          }\n\n          whiteSquare = !whiteSquare;\n      }\n\n      if (i == 1) {\n          whitePiece = !whitePiece;\n      }\n\n      whiteSquare = !whiteSquare; \n    };\n\n    setBoardArgs(board);\n  }\n\n  useEffect(() => {\n    LoadInitialBoard();\n  }, []);\n\n  return (\n    <>\n      <div className=\"pieceDisplay\" style={{display: whiteDisplay ? \"block\" : \"none\"}} id=\"WhiteDisplay\"></div>\n      <div id=\"GameBoard\" className=\"GameBoard\">\n        {\n          boardArgs?.map((row) => {\n          return (\n            <>\n              {\n                row?.map((square) => {\n                  <div className={square.pieceClass} id={\"board\" + square.col + square.row}></div>\n                })\n              }\n            </>\n          )\n        })\n      }\n      </div>\n      <div className=\"pieceDisplay\" style={{display: blackDisplay ? \"block\" : \"none\"}} id=\"BlackDisplay\"></div>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}