{"ast":null,"code":"//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n\n/* tslint:disable */\n/* eslint-disable */\n// ReSharper disable InconsistentNaming\n\nexport class GeneratedAPI {\n  constructor(baseUrl, http) {\n    this.http = void 0;\n    this.baseUrl = void 0;\n    this.jsonParseReviver = undefined;\n    this.http = http ? http : window;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n  }\n\n  /**\n   * @return Success\n   */\n  new() {\n    let url_ = this.baseUrl + \"/api/v1/board/new\";\n    url_ = url_.replace(/[?&]$/, \"\");\n    let options_ = {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"text/plain\"\n      }\n    };\n    return this.http.fetch(url_, options_).then(_response => {\n      return this.processNew(_response);\n    });\n  }\n  processNew(response) {\n    const status = response.status;\n    let _headers = {};\n    if (response.headers && response.headers.forEach) {\n      response.headers.forEach((v, k) => _headers[k] = v);\n    }\n    ;\n    if (status === 200) {\n      return response.text().then(_responseText => {\n        let result200 = null;\n        result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        return result200;\n      });\n    } else if (status !== 200 && status !== 204) {\n      return response.text().then(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      });\n    }\n    return Promise.resolve(null);\n  }\n\n  /**\n   * @return Success\n   */\n  moves() {\n    let url_ = this.baseUrl + \"/api/v1/moves\";\n    url_ = url_.replace(/[?&]$/, \"\");\n    let options_ = {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"text/plain\"\n      }\n    };\n    return this.http.fetch(url_, options_).then(_response => {\n      return this.processMoves(_response);\n    });\n  }\n  processMoves(response) {\n    const status = response.status;\n    let _headers = {};\n    if (response.headers && response.headers.forEach) {\n      response.headers.forEach((v, k) => _headers[k] = v);\n    }\n    ;\n    if (status === 200) {\n      return response.text().then(_responseText => {\n        let result200 = null;\n        result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        return result200;\n      });\n    } else if (status !== 200 && status !== 204) {\n      return response.text().then(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      });\n    }\n    return Promise.resolve(null);\n  }\n}\nexport class ApiException extends Error {\n  constructor(message, status, response, headers, result) {\n    super();\n    this.message = void 0;\n    this.status = void 0;\n    this.response = void 0;\n    this.headers = void 0;\n    this.result = void 0;\n    this.isApiException = true;\n    this.message = message;\n    this.status = status;\n    this.response = response;\n    this.headers = headers;\n    this.result = result;\n  }\n  static isApiException(obj) {\n    return obj.isApiException === true;\n  }\n}\nfunction throwException(message, status, response, headers, result) {\n  if (result !== null && result !== undefined) throw result;else throw new ApiException(message, status, response, headers, null);\n}","map":{"version":3,"names":["GeneratedAPI","constructor","baseUrl","http","jsonParseReviver","undefined","window","new","url_","replace","options_","method","headers","fetch","then","_response","processNew","response","status","_headers","forEach","v","k","text","_responseText","result200","JSON","parse","throwException","Promise","resolve","moves","processMoves","ApiException","Error","message","result","isApiException","obj"],"sources":["/Users/parkerstovall/Desktop/WorkStuff/ChessAI_WebAPI/client/src/GeneratedAPI.ts"],"sourcesContent":["//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n\n/* tslint:disable */\n/* eslint-disable */\n// ReSharper disable InconsistentNaming\n\nexport class GeneratedAPI {\n    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {\n        this.http = http ? http : window as any;\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n    }\n\n    /**\n     * @return Success\n     */\n    new(): Promise<BoardDisplay> {\n        let url_ = this.baseUrl + \"/api/v1/board/new\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: RequestInit = {\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"text/plain\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processNew(_response);\n        });\n    }\n\n    protected processNew(response: Response): Promise<BoardDisplay> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver) as BoardDisplay;\n            return result200;\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<BoardDisplay>(null as any);\n    }\n\n    /**\n     * @return Success\n     */\n    moves(): Promise<BoardDisplay> {\n        let url_ = this.baseUrl + \"/api/v1/moves\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: RequestInit = {\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"text/plain\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processMoves(_response);\n        });\n    }\n\n    protected processMoves(response: Response): Promise<BoardDisplay> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver) as BoardDisplay;\n            return result200;\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<BoardDisplay>(null as any);\n    }\n}\n\nexport interface BoardDisplay {\n    rows?: BoardDisplayRow[] | undefined;\n}\n\nexport interface BoardDisplayRow {\n    squares?: BoardDisplaySquare[] | undefined;\n}\n\nexport interface BoardDisplaySquare {\n    col?: number;\n    row?: number;\n    backColor?: string | undefined;\n    cssClass?: string | undefined;\n    id?: string | undefined;\n}\n\nexport class ApiException extends Error {\n    message: string;\n    status: number;\n    response: string;\n    headers: { [key: string]: any; };\n    result: any;\n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isApiException = true;\n\n    static isApiException(obj: any): obj is ApiException {\n        return obj.isApiException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): any {\n    if (result !== null && result !== undefined)\n        throw result;\n    else\n        throw new ApiException(message, status, response, headers, null);\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO,MAAMA,YAAY,CAAC;EAKtBC,WAAWA,CAACC,OAAgB,EAAEC,IAAyE,EAAE;IAAA,KAJjGA,IAAI;IAAA,KACJD,OAAO;IAAA,KACLE,gBAAgB,GAAmDC,SAAS;IAGlF,IAAI,CAACF,IAAI,GAAGA,IAAI,GAAGA,IAAI,GAAGG,MAAa;IACvC,IAAI,CAACJ,OAAO,GAAGA,OAAO,KAAKG,SAAS,IAAIH,OAAO,KAAK,IAAI,GAAGA,OAAO,GAAG,EAAE;EAC3E;;EAEA;AACJ;AACA;EACIK,GAAGA,CAAA,EAA0B;IACzB,IAAIC,IAAI,GAAG,IAAI,CAACN,OAAO,GAAG,mBAAmB;IAC7CM,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;IAEhC,IAAIC,QAAqB,GAAG;MACxBC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,QAAQ,EAAE;MACd;IACJ,CAAC;IAED,OAAO,IAAI,CAACT,IAAI,CAACU,KAAK,CAACL,IAAI,EAAEE,QAAQ,CAAC,CAACI,IAAI,CAAEC,SAAmB,IAAK;MACjE,OAAO,IAAI,CAACC,UAAU,CAACD,SAAS,CAAC;IACrC,CAAC,CAAC;EACN;EAEUC,UAAUA,CAACC,QAAkB,EAAyB;IAC5D,MAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAM;IAC9B,IAAIC,QAAa,GAAG,CAAC,CAAC;IAAE,IAAIF,QAAQ,CAACL,OAAO,IAAIK,QAAQ,CAACL,OAAO,CAACQ,OAAO,EAAE;MAAEH,QAAQ,CAACL,OAAO,CAACQ,OAAO,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAKH,QAAQ,CAACG,CAAC,CAAC,GAAGD,CAAC,CAAC;IAAE;IAAC;IAC5I,IAAIH,MAAM,KAAK,GAAG,EAAE;MAChB,OAAOD,QAAQ,CAACM,IAAI,CAAC,CAAC,CAACT,IAAI,CAAEU,aAAa,IAAK;QAC/C,IAAIC,SAAc,GAAG,IAAI;QACzBA,SAAS,GAAGD,aAAa,KAAK,EAAE,GAAG,IAAI,GAAGE,IAAI,CAACC,KAAK,CAACH,aAAa,EAAE,IAAI,CAACpB,gBAAgB,CAAiB;QAC1G,OAAOqB,SAAS;MAChB,CAAC,CAAC;IACN,CAAC,MAAM,IAAIP,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,GAAG,EAAE;MACzC,OAAOD,QAAQ,CAACM,IAAI,CAAC,CAAC,CAACT,IAAI,CAAEU,aAAa,IAAK;QAC/C,OAAOI,cAAc,CAAC,sCAAsC,EAAEV,MAAM,EAAEM,aAAa,EAAEL,QAAQ,CAAC;MAC9F,CAAC,CAAC;IACN;IACA,OAAOU,OAAO,CAACC,OAAO,CAAe,IAAW,CAAC;EACrD;;EAEA;AACJ;AACA;EACIC,KAAKA,CAAA,EAA0B;IAC3B,IAAIvB,IAAI,GAAG,IAAI,CAACN,OAAO,GAAG,eAAe;IACzCM,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;IAEhC,IAAIC,QAAqB,GAAG;MACxBC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,QAAQ,EAAE;MACd;IACJ,CAAC;IAED,OAAO,IAAI,CAACT,IAAI,CAACU,KAAK,CAACL,IAAI,EAAEE,QAAQ,CAAC,CAACI,IAAI,CAAEC,SAAmB,IAAK;MACjE,OAAO,IAAI,CAACiB,YAAY,CAACjB,SAAS,CAAC;IACvC,CAAC,CAAC;EACN;EAEUiB,YAAYA,CAACf,QAAkB,EAAyB;IAC9D,MAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAM;IAC9B,IAAIC,QAAa,GAAG,CAAC,CAAC;IAAE,IAAIF,QAAQ,CAACL,OAAO,IAAIK,QAAQ,CAACL,OAAO,CAACQ,OAAO,EAAE;MAAEH,QAAQ,CAACL,OAAO,CAACQ,OAAO,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAKH,QAAQ,CAACG,CAAC,CAAC,GAAGD,CAAC,CAAC;IAAE;IAAC;IAC5I,IAAIH,MAAM,KAAK,GAAG,EAAE;MAChB,OAAOD,QAAQ,CAACM,IAAI,CAAC,CAAC,CAACT,IAAI,CAAEU,aAAa,IAAK;QAC/C,IAAIC,SAAc,GAAG,IAAI;QACzBA,SAAS,GAAGD,aAAa,KAAK,EAAE,GAAG,IAAI,GAAGE,IAAI,CAACC,KAAK,CAACH,aAAa,EAAE,IAAI,CAACpB,gBAAgB,CAAiB;QAC1G,OAAOqB,SAAS;MAChB,CAAC,CAAC;IACN,CAAC,MAAM,IAAIP,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,GAAG,EAAE;MACzC,OAAOD,QAAQ,CAACM,IAAI,CAAC,CAAC,CAACT,IAAI,CAAEU,aAAa,IAAK;QAC/C,OAAOI,cAAc,CAAC,sCAAsC,EAAEV,MAAM,EAAEM,aAAa,EAAEL,QAAQ,CAAC;MAC9F,CAAC,CAAC;IACN;IACA,OAAOU,OAAO,CAACC,OAAO,CAAe,IAAW,CAAC;EACrD;AACJ;AAkBA,OAAO,MAAMG,YAAY,SAASC,KAAK,CAAC;EAOpCjC,WAAWA,CAACkC,OAAe,EAAEjB,MAAc,EAAED,QAAgB,EAAEL,OAAgC,EAAEwB,MAAW,EAAE;IAC1G,KAAK,CAAC,CAAC;IAAC,KAPZD,OAAO;IAAA,KACPjB,MAAM;IAAA,KACND,QAAQ;IAAA,KACRL,OAAO;IAAA,KACPwB,MAAM;IAAA,KAYIC,cAAc,GAAG,IAAI;IAP3B,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACjB,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACL,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACwB,MAAM,GAAGA,MAAM;EACxB;EAIA,OAAOC,cAAcA,CAACC,GAAQ,EAAuB;IACjD,OAAOA,GAAG,CAACD,cAAc,KAAK,IAAI;EACtC;AACJ;AAEA,SAAST,cAAcA,CAACO,OAAe,EAAEjB,MAAc,EAAED,QAAgB,EAAEL,OAAgC,EAAEwB,MAAY,EAAO;EAC5H,IAAIA,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK/B,SAAS,EACvC,MAAM+B,MAAM,CAAC,KAEb,MAAM,IAAIH,YAAY,CAACE,OAAO,EAAEjB,MAAM,EAAED,QAAQ,EAAEL,OAAO,EAAE,IAAI,CAAC;AACxE"},"metadata":{},"sourceType":"module","externalDependencies":[]}