{"ast":null,"code":"var _jsxFileName = \"/Users/parkerstovall/Desktop/WorkStuff/ChessAI_WebAPI/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { BoardSquareArgs } from './js/BoardSquareArgs';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [boardArgs, setBoardArgs] = useState();\n  const board = [];\n  const whiteDisplay = document.getElementById(\"WhiteDisplay\");\n  const blackDisplay = document.getElementById(\"BlackDisplay\");\n  if (whiteDisplay !== null && whiteDisplay.children.length === 0) {\n    whiteDisplay.style.display = 'none';\n  }\n  if (blackDisplay !== null && blackDisplay.children.length === 0) {\n    blackDisplay.style.display = 'none';\n  }\n  const pieceOrder = [\"Rook\", \"Knight\", \"Bishop\", \"Queen\", \"King\", \"Bishop\", \"Knight\", \"Rook\"];\n  let whiteSquare = true;\n  let whitePiece = false;\n  for (let i = 0; i < 8; i++) {\n    board.push(new Array());\n    for (var j = 0; j < 8; j++) {\n      board[i][j] = new BoardSquareArgs();\n      if (i == 0 || i == 7) {\n        board[i][j].piece = (whitePiece ? \"white|\" : \"black|\") + pieceOrder[j];\n      } else if (i == 1 || i == 6) {\n        board[i][j].piece = whitePiece ? \"white|Pawn\" : \"black|Pawn\";\n      }\n      board[i][j].col = i;\n      board[i][j].row = j;\n      board[i][j].backColor = whiteSquare ? \"white\" : \"black\";\n      board[i][j].pieceClass = board[i][j].backColor + \" boardBtn\";\n      if (board[i][j].piece && board[i][j].piece != \"\") {\n        board[i][j].pieceClass += \" \" + board[i][j].piece.split('|').join('');\n      }\n      whiteSquare = !whiteSquare;\n    }\n    if (i == 1) {\n      whitePiece = !whitePiece;\n    }\n    whiteSquare = !whiteSquare;\n  }\n  ;\n  setBoardArgs(board);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pieceDisplay\",\n      id: \"WhiteDisplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"GameBoard\",\n      className: \"GameBoard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pieceDisplay\",\n      id: \"BlackDisplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"gBOIdU072Ctn4kPMUVmhLI2VBKI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BoardSquareArgs","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","boardArgs","setBoardArgs","board","whiteDisplay","document","getElementById","blackDisplay","children","length","style","display","pieceOrder","whiteSquare","whitePiece","i","push","Array","j","piece","col","row","backColor","pieceClass","split","join","className","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parkerstovall/Desktop/WorkStuff/ChessAI_WebAPI/client/src/App.tsx"],"sourcesContent":["import { BoardSquareArgs } from './js/BoardSquareArgs';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [boardArgs, setBoardArgs] = useState<BoardSquareArgs[][]>();\n\n  const board: BoardSquareArgs[][] = [];\n  const whiteDisplay = document.getElementById(\"WhiteDisplay\")\n  const blackDisplay = document.getElementById(\"BlackDisplay\");\n\n  if (whiteDisplay !== null && whiteDisplay.children.length === 0) {\n      whiteDisplay.style.display = 'none';\n  }\n\n  if (blackDisplay !== null && blackDisplay.children.length === 0) {\n      blackDisplay.style.display = 'none';\n  }\n\n  const pieceOrder = [ \"Rook\", \"Knight\", \"Bishop\", \"Queen\", \"King\", \"Bishop\", \"Knight\", \"Rook\" ];\n  let whiteSquare = true;\n  let whitePiece = false;\n\n  for (let i = 0; i < 8; i++) {\n    board.push(new Array<BoardSquareArgs>());\n\n    for (var j = 0; j < 8; j++) {\n        board[i][j] = new BoardSquareArgs();\n\n        if (i == 0 || i == 7) {\n            board[i][j].piece = (whitePiece ? \"white|\" : \"black|\") + pieceOrder[j];\n        }\n        else if (i == 1 || i == 6) {\n            board[i][j].piece = whitePiece ? \"white|Pawn\" : \"black|Pawn\";\n        }\n\n        board[i][j].col = i;\n        board[i][j].row = j;\n        board[i][j].backColor = (whiteSquare ? \"white\" : \"black\");\n\n        board[i][j].pieceClass = board[i][j].backColor + \" boardBtn\";\n\n        if (board[i][j].piece && board[i][j].piece != \"\") \n        {\n            board[i][j].pieceClass += \" \" + board[i][j].piece.split('|').join('');\n        }\n\n        whiteSquare = !whiteSquare;\n    }\n\n    if (i == 1) {\n        whitePiece = !whitePiece;\n    }\n\n    whiteSquare = !whiteSquare; \n  };\n\n  setBoardArgs(board);\n\n  return (\n    <>\n      <div className=\"pieceDisplay\" id=\"WhiteDisplay\"></div>\n      <div id=\"GameBoard\" className=\"GameBoard\">\n        \n      </div>\n      <div className=\"pieceDisplay\" id=\"BlackDisplay\"></div>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}