{"ast":null,"code":"var _jsxFileName = \"/Users/parkerstovall/Desktop/WorkStuff/ChessAI_WebAPI/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { GeneratedAPI } from './GeneratedAPI.ts';\nimport Board from './components/Board.tsx';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = new GeneratedAPI(\"http://localhost:4000\");\nfunction App() {\n  _s();\n  const [whiteDisplay, setWhiteDisplay] = useState(false);\n  const [blackDisplay, setBlackDisplay] = useState(false);\n  const [board, setBoard] = useState();\n  const [gameID, setGameID] = useState(-1);\n  function BoardSquareClick(col, row) {\n    api.click(gameID, col, row).then(board => {\n      setBoard(board);\n    });\n  }\n  function LoadInitialBoard() {\n    setWhiteDisplay(false);\n    setBlackDisplay(false);\n    api.startGame().then(gameStart => {\n      setGameID(gameStart.gameID);\n      setBoard(gameStart.board);\n    });\n  }\n  useEffect(() => {\n    LoadInitialBoard();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pieceDisplay\",\n      style: {\n        display: whiteDisplay ? \"block\" : \"none\"\n      },\n      id: \"WhiteDisplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      board: board,\n      clickFunc: BoardSquareClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pieceDisplay\",\n      style: {\n        display: blackDisplay ? \"block\" : \"none\"\n      },\n      id: \"BlackDisplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"gCzdxvcT0dLlawrFDEq4bhorKMc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","GeneratedAPI","Board","jsxDEV","_jsxDEV","Fragment","_Fragment","api","App","_s","whiteDisplay","setWhiteDisplay","blackDisplay","setBlackDisplay","board","setBoard","gameID","setGameID","BoardSquareClick","col","row","click","then","LoadInitialBoard","startGame","gameStart","children","className","style","display","id","fileName","_jsxFileName","lineNumber","columnNumber","clickFunc","_c","$RefreshReg$"],"sources":["/Users/parkerstovall/Desktop/WorkStuff/ChessAI_WebAPI/client/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { BoardDisplay, GeneratedAPI } from './GeneratedAPI.ts';\nimport Board from './components/Board.tsx';\nimport './App.css';\n\nconst api = new GeneratedAPI(\"http://localhost:4000\");\n\nfunction App() {\n  const [whiteDisplay, setWhiteDisplay] = useState<boolean>(false);\n  const [blackDisplay, setBlackDisplay] = useState<boolean>(false);\n  const [board, setBoard] = useState<BoardDisplay>();\n  const [gameID, setGameID] = useState<number>(-1);\n\n  function BoardSquareClick(col: number, row: number) {\n    api.click(gameID, col, row).then((board) => {\n      setBoard(board);\n    });\n  }\n\n  function LoadInitialBoard() {\n    setWhiteDisplay(false);\n    setBlackDisplay(false);\n\n    api.startGame().then((gameStart) => {\n      setGameID(gameStart.gameID);\n      setBoard(gameStart.board);\n    });\n\n  }\n\n  useEffect(() => {\n    LoadInitialBoard();\n  }, []);\n\n  return (\n    <>\n      <div className=\"pieceDisplay\" style={{display: whiteDisplay ? \"block\" : \"none\"}} id=\"WhiteDisplay\"></div>\n      <Board board={board} clickFunc={BoardSquareClick} />\n      <div className=\"pieceDisplay\" style={{display: blackDisplay ? \"block\" : \"none\"}} id=\"BlackDisplay\"></div>\n    </>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAAuBC,YAAY,QAAQ,mBAAmB;AAC9D,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,GAAG,GAAG,IAAIN,YAAY,CAAC,uBAAuB,CAAC;AAErD,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EAChE,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAU,KAAK,CAAC;EAChE,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAe,CAAC;EAClD,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAS,CAAC,CAAC,CAAC;EAEhD,SAASkB,gBAAgBA,CAACC,GAAW,EAAEC,GAAW,EAAE;IAClDb,GAAG,CAACc,KAAK,CAACL,MAAM,EAAEG,GAAG,EAAEC,GAAG,CAAC,CAACE,IAAI,CAAER,KAAK,IAAK;MAC1CC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC;EACJ;EAEA,SAASS,gBAAgBA,CAAA,EAAG;IAC1BZ,eAAe,CAAC,KAAK,CAAC;IACtBE,eAAe,CAAC,KAAK,CAAC;IAEtBN,GAAG,CAACiB,SAAS,CAAC,CAAC,CAACF,IAAI,CAAEG,SAAS,IAAK;MAClCR,SAAS,CAACQ,SAAS,CAACT,MAAM,CAAC;MAC3BD,QAAQ,CAACU,SAAS,CAACX,KAAK,CAAC;IAC3B,CAAC,CAAC;EAEJ;EAEAf,SAAS,CAAC,MAAM;IACdwB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MAAKuB,SAAS,EAAC,cAAc;MAACC,KAAK,EAAE;QAACC,OAAO,EAAEnB,YAAY,GAAG,OAAO,GAAG;MAAM,CAAE;MAACoB,EAAE,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzG9B,OAAA,CAACF,KAAK;MAACY,KAAK,EAAEA,KAAM;MAACqB,SAAS,EAAEjB;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpD9B,OAAA;MAAKuB,SAAS,EAAC,cAAc;MAACC,KAAK,EAAE;QAACC,OAAO,EAAEjB,YAAY,GAAG,OAAO,GAAG;MAAM,CAAE;MAACkB,EAAE,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACzG,CAAC;AAEP;AAACzB,EAAA,CAlCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}